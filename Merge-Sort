#include<iostream>
#include<vector>

using namespace std;

const unsigned int inf=1e9;

void merge(int A[], int p, int q, int r)
{
    int i,j;
    int n1 = q - p + 1;
    int n2 = r - q;

    int L[n1], R[n2];

    for (i = 1; i <= n1; i++){
        L[i] = A[p + i -1];
    }

    for (j = 1; j <= n2; j++){
        R[j] = A[q + j];
    }

    L[n1+1]=inf;
    R[n2+1]=inf;

    i = 1;
    j = 1;

    for(int k = p; k <= r; k++)
    {
        if (L[i] <= R[j])
        {
            A[k] = L[i];
            i++;
        }
        else
        {
            A[k] = R[j];
            j++;
        }
    }
}

void mergeSort(int A[], int p, int r)
{
    if (p < r)
    {
        int q = ( (p + r) / 2);
        mergeSort(A, p, q);
        mergeSort(A, q+1, r);
        merge(A, p, q, r);
    }
}

int main()
{
    int n;

    cin>>n;

    int A[n];

    for(int i=n, j=0; j<n; j++, i--)
    {
        A[j]=i;
    }

    mergeSort(A, 0, n-1);

    for(int i=0; i<n; i++)
    {
        cout<<A[i]<<'\n';
    }

    return 0;
}
